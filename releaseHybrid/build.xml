<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="release" name="Aqua Native Rendering">

    <tstamp>
        <format property="NOW" timezone="GMT" pattern="yyyy-MM-dd'T'HH:mm:ss'Z'"/>
    </tstamp>

    <exec executable="/usr/libexec/java_home" outputproperty="jdk8">
        <arg value="-F"/>
        <arg value="-v"/>
        <arg value="1.8"/>
    </exec>

    <property name="bootclasspath" value="${jdk8}/jre/lib/rt.jar" />

    <property name="RELEASE" value="0.9"/>
    <property name="fullReleaseName" value="${RELEASE} ${NOW}"/>

    <property name="base" value=".."/>
    <property name="src" value="${base}/src"/>
    <property name="jnisrc" value="${base}/jni"/>
    <property name="builddir" value="out"/>
    <property name="classesdir" value="${builddir}/classes"/>
    <property name="headersdir" value="${builddir}/headers"/>
    <property name="jnidir" value="${builddir}/jni"/>
    <property name="distdir" value="dist"/>

    <property name="SDKversion" value="10.11"/>
    <property name="SDKroot" value="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX${SDKversion}.sdk" />
    <property name="libpath" value="${base}/lib/IdeaAnnotations.jar"/>
    <property name="cc" value="/usr/bin/cc"/>

    <property name="debug" value="false"/>

    <target name="init">
        <echo message="${fullReleaseName}"/>
    </target>
        
    <target name="clean" description="Remove build directories">
        <delete includeEmptyDirs="true" failonerror="false">
          <fileset dir="${builddir}"/>
          <fileset dir="${distdir}"/>
        </delete>
    </target>

    <target name="saveIDs">
      <echo file="${classesdir}/org/violetlib/jnr/aqua/RELEASE.txt" message="Hybrid ${RELEASE}"/>
      <echo file="${classesdir}/org/violetlib/jnr/aqua/BUILD.txt" message="${NOW}"/>
    </target>

    <target name="compile-AquaNativeRendering-Java">
        <mkdir dir="${classesdir}"/>

        <javac source="1.8"
            bootclasspath="${bootclasspath}"
            classpath="${libpath}"
            encoding="UTF-8"
            srcdir="${src}"
            destdir="${classesdir}"
            debug="${debug}"
            optimize="true"
            includeantruntime="false"
            >
            <patternset>
                <include name="org/violetlib/geom/*.java"/>
                <include name="org/violetlib/jnr/*.java"/>
                <include name="org/violetlib/jnr/aqua/*.java"/>
                <include name="org/violetlib/jnr/aqua/impl/*.java"/>
                <include name="org/violetlib/jnr/aqua/coreui/*.java"/>
                <include name="org/violetlib/jnr/aqua/jrs/*.java"/>
                <include name="org/violetlib/jnr/impl/*.java"/>
            </patternset>
            </javac>

    </target>
    
    <target name="compile-AquaNativeRendering-JNI-headers" depends="compile-AquaNativeRendering-Java">
        <mkdir dir="${headersdir}"/>

        <javah class="org.violetlib.jnr.aqua.impl.AquaNativePainter"
            classpath="${classesdir}"
            destdir="${headersdir}"
            />
        <javah class="org.violetlib.jnr.aqua.impl.NativeSupport"
            classpath="${classesdir}"
            destdir="${headersdir}"
            />
        <javah class="org.violetlib.jnr.aqua.coreui.CoreUIPainter"
            classpath="${classesdir}"
            destdir="${headersdir}"
            />
    </target>

    <target name="compile-AquaNativeRendering-JNI" depends="compile-AquaNativeRendering-JNI-headers">
        <mkdir dir="${jnidir}"/>

        <exec executable="${cc}" failonerror="true" >
            <arg value="-arch"/>
            <arg value="x86_64"/>

            <arg value="-isysroot"/>
            <arg value="${SDKroot}"/>
            <env key="MACOSX_DEPLOYMENT_TARGET" value="${SDKversion}"/>

            <arg value="-o"/>
            <arg value="${jnidir}/libVAquaRendering.dylib"/>

            <arg value="-I${SDKroot}/System/Library/Frameworks/JavaVM.framework/Headers"/>
            <arg value="-I${SDKroot}/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaNativeFoundation.framework/Headers"/>
            <arg value="-I${SDKroot}/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Headers"/>
            <arg value="-I${headersdir}"/>

            <arg value="-dynamiclib"/>
            <arg value="-ObjC"/>

            <arg value="-framework"/>
            <arg value="JavaVM"/>
            <arg value="-framework"/>
            <arg value="Cocoa"/>

            <arg value="-F/${SDKroot}/System/Library/Frameworks/JavaVM.framework/Versions/A/Frameworks"/>
            <arg value="-framework"/>
            <arg value="JavaNativeFoundation"/>
            <arg value="-framework"/>
            <arg value="JavaRuntimeSupport"/>

            <arg value="${jnisrc}/org_violetlib_jnr_aqua_impl_AquaNativePainter.m"/>
            <arg value="${jnisrc}/org_violetlib_jnr_aqua_coreui_CoreUIPainter.m"/>
            <arg value="${jnisrc}/org_violetlib_jnr_aqua_coreui_CUIDrawPainter.m"/>
        </exec>

    </target>

    <target name="AquaNativeRendering" depends="compile-AquaNativeRendering-JNI,saveIDs">

        <echo message="Building AquaNativeRendering[Hybrid] ${fullReleaseName}"/>

        <mkdir dir="${distdir}"/>

        <jar jarfile="${distdir}/VAquaRendering.jar" basedir="${classesdir}">
            <fileset dir="${jnidir}/"/>
        </jar>
    </target>

    <target name="release" depends="clean,AquaNativeRendering"/>

</project>
